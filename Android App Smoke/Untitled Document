package com.example.marcus.letsquitsmoking;

import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.content.Context;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.net.Uri;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.text.SpannableString;
import android.text.style.TextAppearanceSpan;
import android.util.Base64;
import android.util.Log;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.LinearLayout;
import android.widget.Toast;

import com.example.marcus.letsquitsmoking.Fragments.Achievements;
import com.example.marcus.letsquitsmoking.Fragments.DailyReminder;
import com.example.marcus.letsquitsmoking.Fragments.DailyTask;
import com.example.marcus.letsquitsmoking.Fragments.GetHelp;
import com.example.marcus.letsquitsmoking.Fragments.KeepTrack;
import com.example.marcus.letsquitsmoking.Fragments.Points;
import com.example.marcus.letsquitsmoking.Fragments.Query;
import com.example.marcus.letsquitsmoking.Fragments.Rank;
import com.facebook.CallbackManager;
import com.facebook.FacebookCallback;
import com.facebook.FacebookException;
import com.facebook.FacebookSdk;
import com.facebook.share.Sharer;
import com.facebook.share.model.ShareLinkContent;
import com.facebook.share.widget.ShareDialog;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;

public class MainActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {

    FloatingActionButton fab;
    ShareDialog shareDialog;
    CallbackManager callbackManager;
    LinearLayout frame;
    AlarmReceiver alarmReceiver = new AlarmReceiver();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        FacebookSdk.sdkInitialize(getApplicationContext());
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        //printKeyHash();
        //calender
//        Date date = new Date(System.currentTimeMillis()); //or simply new Date();
//
//        //converting it back to a milliseconds representation:
//        long millis = date.getTime();///current time

        SharedPreferences pref = getSharedPreferences("MYFIRSTPREFE", Context.MODE_PRIVATE);

        //////////date////////////
       // Date myDate = new Date(pref.getLong("time", 0));
        ///test
        frame = findViewById(R.id.frame);

        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        //System.out.println(formatter.format(date));
        String CurrentDate =  formatter.format(date);
        String prevDate = pref.getString("date","");
        Log.d("cur date",CurrentDate);
        Log.d("prev date",prevDate);
        if(!CurrentDate.matches(prevDate)){
            pref.edit().putString("date", CurrentDate).apply();
            pref.edit().putInt("flagShuffle", 1).apply();

            pref.edit().putInt("ta1", 1).apply();
            pref.edit().putInt("ta2", 1).apply();
            pref.edit().putInt("ta3", 1).apply();
            pref.edit().putInt("ta4", 1).apply();
            pref.edit().putInt("ta5", 1).apply();
            pref.edit().putInt("ta6", 1).apply();
            pref.edit().commit();


            Log.d("flagShuffle main",pref.getInt("flagShuffle",0)+"");


        }



//        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
//        LocalDateTime now = LocalDateTime.now();
//        System.out.println(dtf.format(now));

        ///
//        long prev = pref.getLong("time",0);/// prev time
//        if(prev != millis){
//            pref.edit().putLong("time", millis).apply();
//            pref.edit().putInt("flagShuffle", 1).apply();
//            pref.edit().commit();
//        }

        int xy = pref.getInt("ini",0);
        if(xy == 0){
            //SharedPreferences prefe = getSharedPreferences("MYFIRSTPREFE", Context.MODE_PRIVATE);
            SharedPreferences.Editor editShPr = pref.edit();

            editShPr.putInt("FIRST",0);
            editShPr.apply();
            editShPr.putInt("ini",1);
            editShPr.apply();
            editShPr.putInt("flagAch1",0);
            editShPr.apply();
            editShPr.putInt("flagAch2",0);
            editShPr.apply();
            editShPr.putInt("flagAch3",0);
            editShPr.apply();
            editShPr.putInt("flagAch4",0);
            editShPr.apply();
            editShPr.putInt("flagAch5",0);
            editShPr.apply();
            editShPr.commit();
        }


        ////////////////////////////////////////////////////////////////////////////////
        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        ///////////
        Menu menu = navigationView.getMenu();

        MenuItem tools= menu.findItem(R.id.communicate);
        SpannableString s = new SpannableString(tools.getTitle());
        s.setSpan(new TextAppearanceSpan(this, R.style.TextAppearance44), 0, s.length(), 0);
        tools.setTitle(s);
        navigationView.setNavigationItemSelectedListener(this);
        ////////////////
        navigationView.setNavigationItemSelectedListener(this);

        //AlarmReceiver alarmReceiver = new AlarmReceiver();

        IntentFilter intf = new IntentFilter();

        registerReceiver(alarmReceiver, intf,
                "com.example.marcus.letsquitsmoking.sata", null);
        //if(pref.getInt("flagQuery",0)==0){
//            Query query = new Query();
//            FragmentManager Fm = getFragmentManager();
//            FragmentTransaction Ft = Fm.beginTransaction();
//            Ft.replace(R.id.frame, query, "dt");
//            Ft.commit();
        //}
        //////////////////////////////////////////////////////////////////////////////////
        callbackManager = CallbackManager.Factory.create();
        shareDialog = new ShareDialog(this);

        fab = findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
//                Snackbar.make(view, "Here's a Snackbar", Snackbar.LENGTH_LONG)
//                        .setAction("Action", null).show();
                shareDialog.registerCallback(callbackManager, new FacebookCallback<Sharer.Result>() {
                    @Override
                    public void onSuccess(Sharer.Result result) {
                        Toast.makeText(MainActivity.this, "Share Successful", Toast.LENGTH_SHORT).show();
                    }
                    @Override
                    public void onCancel() {
                        Toast.makeText(MainActivity.this, "Share Cancel", Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onError(FacebookException error) {
                        Toast.makeText(MainActivity.this, error.getMessage(), Toast.LENGTH_SHORT).show();
                    }
                });
                ShareLinkContent content = new ShareLinkContent.Builder()
                        .setQuote("Awesome App")
                        .setContentUrl(Uri.parse("https://www.youtube.com/watch?v=FvUnEphzl2E"))
                        .build();
                if(ShareDialog.canShow(ShareLinkContent.class)){
                    shareDialog.show(content);
                }
            }
        });
    }

    private void printKeyHash(){
        try{
            PackageInfo info = getPackageManager().getPackageInfo("com.example.marcus.letsquitsmoking",
                    PackageManager.GET_SIGNATURES);
            for(Signature signature:info.signatures){
                MessageDigest md = MessageDigest.getInstance("SHA");
                md.update(signature.toByteArray());
                Log.d("KeyHash", Base64.encodeToString(md.digest(),Base64.DEFAULT));
            }
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.nav_daily_task) {
            setTitle("Daily Tasks");
            DailyTask dt = new DailyTask();
            FragmentManager Fm = getFragmentManager();
            FragmentTransaction Ft = Fm.beginTransaction();
            Ft.replace(R.id.frame, dt, "dt");
            Ft.commit();

        } else if (id == R.id.nav_daily_reminder) {
            setTitle("Daily Reminder");
            DailyReminder dailyReminder = new DailyReminder();
            FragmentManager Fm = getFragmentManager();
            FragmentTransaction Ft = Fm.beginTransaction();
            Ft.replace(R.id.frame, dailyReminder, "dr");
            Ft.commit();

        } else if (id == R.id.nav_points) {
            setTitle("Points");
            Points points = new Points();
            FragmentManager Fm = getFragmentManager();
            FragmentTransaction Ft = Fm.beginTransaction();
            Ft.replace(R.id.frame, points, "pts");
            Ft.commit();

        } else if (id == R.id.nav_achievements) {
            setTitle("Achievements");
            Achievements achievements = new Achievements();
            FragmentManager Fm = getFragmentManager();
            FragmentTransaction Ft = Fm.beginTransaction();
            Ft.replace(R.id.frame, achievements, "achievements");
            Ft.commit();

        } else if (id == R.id.nav_rank) {
            setTitle("Your Rank");
            Rank rank = new Rank();
            FragmentManager Fm = getFragmentManager();
            FragmentTransaction Ft = Fm.beginTransaction();
            Ft.replace(R.id.frame, rank, "rank");
            Ft.commit();

        } else if (id == R.id.nav_track) {
        setTitle("Keep Track");
        KeepTrack keepTrack = new KeepTrack();
        FragmentManager Fm = getFragmentManager();
        FragmentTransaction Ft = Fm.beginTransaction();
        Ft.replace(R.id.frame, keepTrack, "help");
        Ft.commit();

        }else if (id == R.id.nav_help) {
            setTitle("Get Help");
            GetHelp getHelp = new GetHelp();
            FragmentManager Fm = getFragmentManager();
            FragmentTransaction Ft = Fm.beginTransaction();
            Ft.replace(R.id.frame, getHelp, "help");
            Ft.commit();
        }

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);


        return true;
    }

    @Override
    protected void onPause() {
        super.onPause();
        unregisterReceiver(alarmReceiver);
    }
}

